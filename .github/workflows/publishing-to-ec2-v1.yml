name: Publicação para EC2

on:
  workflow_call:
    inputs:
      DOCKER_FILE:
        required: true
        type: string
      PATH_PROJECT:
        required: true
        type: string
      CONFIG_FILE:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
          required: true
      AWS_REGION:
          required: true
      AWS_SECRET_ACCESS_KEY:
          required: true
      DOTNET_VERSION:
          required: true
      ECR_IMAGE:
          required: true
      VERSION_SUFFIX:
        required: true
      AWS_ORGANIZATION:
          required: true
      AWS_SERVER:
        required: true
      AWS_SERVER_USER:
          required: true
      AWS_SSH_KEY:
          required: true

jobs:
  push_to_ecr:
    uses: nimblersoftware/actions/.github/workflows/publishing-to-ecr-v1.yml@master
    with:
      DOCKER_FILE: ${{ inputs.DOCKER_FILE }}
      PATH_PROJECT: ${{ inputs.PATH_PROJECT }}
      CONFIG_FILE: ${{ inputs.CONFIG_FILE }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOTNET_VERSION: ${{ secrets.DOTNET_VERSION }}
      ECR_IMAGE: ${{ secrets.ECR_IMAGE }}
      VERSION_SUFFIX: ${{ secrets.VERSION_SUFFIX }}

  deploy:
    name: Publicação AWS EC2
    runs-on: ubuntu-latest
    needs: push_to_ecr
    steps:
      - name: Efetuando publicação
        uses: appleboy/ssh-action@master
        with:
          host:  98.80.71.179
          username: ec2-user
          key: AAAAB3NzaC1yc2EAAAADAQABAAABAQDIGOsFr8skFrxj5CO55UlwtKfGwefU4rXSLB2qIivge0YSXjVVuk3beeYU4dzEJxO/G9bsnxvLpg2+QUOt2InnUH5vUB46sZ8jO0qprNMfQBiZroOPWkrkaGIYyu9/IQae/7z5bOW/heOZI2URgk2Pk7d/5rI1Qe18js3/QvM5uXNwOG5xQH+/vpvzoxZBRs9p20/zjd+S27mRgdN1s/EIv6EYbq8ETGr4wySBQ124FnfjF4Izq0QKRBzmJTKY1L+0fa4f8xlSaLh6rlIv7aW6TmbY6wMU/6oiUkpB3YegzHDrfW1qWZfkr0j6yie+CYpdHKKwBqE9mbBfnC41o4lj
          # host: ${{ secrets.AWS_SERVER }}
          # username: ${{ secrets.AWS_SERVER_USER }}
          # key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            cd docker-compose
            sudo aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ORGANIZATION }}
            sudo docker-compose -f docker-compose-ambiente.yml down
            sudo docker rmi $(docker images -a -q)
            sudo docker-compose -f docker-compose-ambiente.yml up -d