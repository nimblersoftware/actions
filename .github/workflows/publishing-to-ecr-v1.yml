name: Processo para o ecr

on:
  workflow_call:
    inputs:
      DOCKER_FILE:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
          required: true
      AWS_REGION:
          required: true
      AWS_SECRET_ACCESS_KEY:
          required: true
      ECR_IMAGE:
          required: true
      VERSION_SUFFIX:
          required: true

jobs:
  push_to_ecr:
    name: Criação da imagem no ECR
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configurando as credenciais na AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login no Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compilando data atual
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

      - name: Criando backup da imagem atual
        run: |
          docker pull ${{ secrets.ECR_IMAGE }}
          docker image tag ${{ secrets.ECR_IMAGE }} ${{ secrets.ECR_IMAGE }}_${{ steps.date.outputs.date }}
          docker push ${{ secrets.ECR_IMAGE }}_${{ steps.date.outputs.date }}

      - name: Preparando e enviando imagem para o Amazon ECR
        run: |
          docker build --build-arg VERSION_SUFFIX=${{ secrets.VERSION_SUFFIX }} -t ${{ secrets.ECR_IMAGE }} -f ${{ inputs.DOCKER_FILE }} .
          docker push ${{ secrets.ECR_IMAGE }}